package pages

import "tools.cyberkrypts.dev/templates/layout"
import "tools.cyberkrypts.dev/templates/components"

templ DownloadFilesScript() {
	<script>
        const peer = new SimplePeer({
            initiator: false,
            trickle: false,
        });
        peer.on("signal", (data) => {
            console.log(JSON.stringify(data));
        });
        peer.on("connect", () => {
            console.log("connected");
        });
        peer.on("data", (data) => {
            console.log("recieved", data);
        });
    </script>
}

templ DownloadFilesIndex(file_name, file_size, err string) {
	@layout.Header("Download Files", components.SimplePeerCdn(), DownloadFilesScript()) {
		<div class="container mx-auto p-4">
			<section class="flex justify-center">
				<div class="flex flex-col gap-2 items-center">
					<h1 class="text-4xl font-bold mb-4">Send Files</h1>
					<p class="text-blue-500 text-xl">
						Send files to anyone with a link
					</p>
				</div>
			</section>
			if err != "" {
				<div class="flex flex-col items-center mt-5">
					<h2 class="text-3xl font-bold mt-4">Error</h2>
					<div class="flex flex-col mt-4">
						<div class="flex flex-row">
							<h3 class="text-2xl font-bold mt-4 text-red-500">{ err }</h3>
						</div>
					</div>
				</div>
			} else {
				<section class="mt-8">
					<h2 class="text-2xl font-bold mb-4">File Info</h2>
					<p class="text-gray-500">File Name: { file_name }</p>
					<p class="text-gray-500">File Size: { file_size }</p>
				</section>
				<div class="flex justify-center mt-5">
					<a href="/download/example.txt" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded">
						Download File
					</a>
				</div>
			}
		</div>
	}
}
